---
// src/pages/signup.astro (Option B - Updated)
import Layout from '../layouts/Layout.astro';
---

<Layout title="Sign Up">
    <div class="card">
        <h2>Create Your Account</h2>
        <form id="signup-form">
            <div>
                <label for="username">Username</label>
                <input type="text" id="username" name="username" placeholder="e.g., yourname (no spaces, lowercase)" required />
                <small>This will be your public URL: yoursite.com/username</small>
            </div>
            <div>
                <label for="email">Email</label>
                <input type="email" id="email" name="email" placeholder="you@example.com" required />
            </div>
            <div>
                <label for="password">Password</label>
                <input type="password" id="password" name="password" placeholder="Min. 8 characters" required />
            </div>
            <button type="submit" id="submit-button">Sign Up</button>
        </form>
        <div id="message-area" class="message" style="display: none;"></div>
        <p class="text-center mt-4">Already have an account? <a href="/login">Login here</a>.</p>
    </div>

    <script>
        import { appwrite } from 'src/lib/appwrite';

        const form = document.getElementById('signup-form') as HTMLFormElement | null;
        const usernameInput = document.getElementById('username') as HTMLInputElement | null;
        const emailInput = document.getElementById('email') as HTMLInputElement | null;
        const passwordInput = document.getElementById('password') as HTMLInputElement | null;
        const submitButton = document.getElementById('submit-button') as HTMLButtonElement | null;
        const messageArea = document.getElementById('message-area') as HTMLDivElement | null;

        function showMessage(text: string, type: 'error' | 'success' = 'error') {
            if (messageArea) {
                messageArea.textContent = text;
                messageArea.className = `message ${type}`;
                messageArea.style.display = 'block';
            }
        }

        if (form && submitButton && messageArea && usernameInput && emailInput && passwordInput) {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                submitButton.disabled = true;
                submitButton.textContent = 'Signing up...';
                showMessage('', 'error'); // Clear previous

                const username = usernameInput.value.trim().toLowerCase();
                const email = emailInput.value.trim();
                const password = passwordInput.value;

                // --- Validation ---
                if (!/^[a-z0-9_.-]+$/.test(username) || password.length < 8) {
                    showMessage('Invalid username or password (min 8 chars).');
                    submitButton.disabled = false;
                    submitButton.textContent = 'Sign Up';
                    return;
                }

                try {
                    // Step 1: Check username (We still check to give early feedback)
                    // Note: There's a small race condition risk here, but it's acceptable for many apps.
                    const existingProfiles = await appwrite.databases.listDocuments(
                        appwrite.dbId,
                        appwrite.profilesCollectionId,
                        [appwrite.Query.equal('username', username)]
                    );
                    if (existingProfiles.total > 0) {
                        throw new Error('Username might already be taken. Please choose another.');
                    }

                    // Step 2: Create Appwrite Auth User
                    // We pass the 'username' as the 'name' field in Appwrite Auth
                    await appwrite.account.create(appwrite.ID.unique(), email, password, username);
                    console.log("Auth user created. Verification email sent.");

                    // Step 3 & 4 - REMOVED: No profile creation, no login attempt.

                    // Step 5: Show Success Message
                    showMessage('Account created! Please check your email for a verification link, then head to the Login page.', 'success');
                    form.reset(); // Clear the form
                    submitButton.textContent = 'Account Created!'; // Change button text

                } catch (error: any) {
                    console.error("Signup process failed:", error);
                    let errorMessage = error.message || 'An unknown error occurred.';

                    if (error.type === 'user_already_exists' || (error.message && error.message.includes('already exists'))) {
                        errorMessage = 'An account with this email/username already exists.';
                    } else {
                         errorMessage = `An error occurred: ${error.message}`;
                    }
                    showMessage(errorMessage);
                    submitButton.disabled = false;
                    submitButton.textContent = 'Sign Up';
                }
            });
        }
    </script>
</Layout>